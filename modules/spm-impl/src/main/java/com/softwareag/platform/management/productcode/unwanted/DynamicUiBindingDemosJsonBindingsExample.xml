<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<uiBinding>	
	<groupDef name="ControlsDemo">		
	    <!-- Typical TextBox control 
	              - bound to #{NameOnEdit} ServerSide binding
	              - required="OnEdit" - Will be required only during the edit of the configuration 
	    -->
		<property name="textBoxRequiredOnEditControl" value="#{Name}" label="On Edit TextBox Control" required="OnEdit" type="TextBox" defaultValue="dynamicDemoValue"/>
			
	    <!-- Typical CheckBox control 
	              - bound to #{CheckBoxBooleanBinding} ServerSide binding	               
	    -->
		<property name="checkBox" value="#{CheckBoxBooleanBinding}" label="Disable DualListBox" type="CheckBox" />
		
	    <!-- Typical DualListBoxControl control 
	              - bound to #{Values} ServerSide binding	
	              - enabled on condition 
	    -->
		<property name="DualListBoxControl" value="#{Values}" label="DuallistBox Control - Array output" type="DualListBox" enabled="OnCondition" enabledCondition ="checkBox.value  != 'true'">
			<selectItems>				
				<selectItem value="staticSelection0" label="Static Selection0"/>
				<selectItem value="staticSelection1" label="Static Selection1"/>
				<selectItem value="staticSelection2" label="Static Selection2"/>
				<selectItem value="staticSelection3" label="Static Selection3"/>
				
				<!-- dynamic list of configurations -->
				     <!--  <selectList dynamic="true" type="landscape/nodes" selectListItems="#{node}" selectListItemValue="#{@alias}" selectListItemLabel="#{name}"/> -->
				     <selectList dynamic="true" type="administration/component/${nodeAlias}/${runtimeComponentId}/DemoCases/listChannels"  selectListItems="#{channel}" selectListItemValue="#{type}" selectListItemLabel="#{name}"/> 
				     <!--<selectList dynamic="true" type="configuration/instances" configurationTypeId="ADVANCED-UIBINDING-DEMOS-JSON" /> --> 
				     <!--<selectList dynamic="true" type="configuration/instances"  query="?runtimeComponentId=${runtimeComponentId}&amp;nodeAlias=${nodeAlias}&amp;configurationTypeId=ADVANCED-UIBINDING-DEMOS-JSON" /> -->
				    
			</selectItems>		
		</property>
					
		<!-- Table control 
	              - bound to #{BindingCollection.Item} Collection ServerSide binding
	                  - label of the table contains special symbols - '&amp;'
	              - the actions in the table
	                   - addItem - enables Add to the table functionality              
	                   - deleteItem - enables Delete from the table functionality              
	              - the columns in the table:
	                   - Name - Element Binding 
	                   - Properties.Property[@name=demoBindingName].$ - Properties format Server binding 
	                        - with special symbols in the Label - '&amp;' 
	                   - Properties.Property[@name=demoSecondBindingName].$ - Properties format Server binding bound with a DropDown 
	                        - with applied labels
	                        - with applied forceUniqueItemsSelection
	                        - with applied defaultValue
	                   - Properties.Property[@name=demoComplexBindingName].$ - Complex and dynamic drop down binding 
	                   - @type - Binding to a attribute that is not at the begining of the columns list
	    -->		
		<property name="BindingCollectionTableControl" value="#{BindingCollection.Item}" label="Table Control &amp; array" type="Table">
			<createAction name="addItem" label="Add Item" />
			<deleteAction name="deleteItem" label="Delete Item" />
  
			<column value="Name" label="Element" width="100" type="TextBox" defaultValue="defaultName"/>			
			<column value="Properties.Property[@name=demoBindingName].$" width="180" label="Array &amp; Binding" type="TextBox" defaultValue="bindingItem"/>
			<column value="Properties.Property[@name=demoSecondBindingName].$" label="Item 1 Binding" type="DropDown" defaultValue="false" forceUniqueItemsSelection="true">
				<selectItems>
					<selectItem value="true" name="clusterEnabled" label="Yes - defined" />
					<selectItem value="false" name="clusterDisabled" label="No - defined"/>
					<selectItem value="undefined" name="clusterUndefined" label="Other - undefined"/>
				</selectItems>
			</column> 
			<column value="Properties.Property[@name=demoComplexBindingName].$" width="180" label="Complex Item" type="DropDown" defaultValue="{http://namespaces.softwareag.com/DEMO}Review">
				<selectItems>
		  			<selectItem name='complexBindingBooth'  value='{http://namespaces.softwareag.com/DEMO}Booth' label='Booth -&amp;- http://namespaces.softwareag.com/DEMO/Booth'/>
          			<selectItem name='complexBindingReview' value='{http://namespaces.softwareag.com/DEMO}Review' label='Review - http://namespaces.softwareag.com/DEMO/Review'/>          			          							
          			
          			<!-- dynamic list of configurations -->
					<selectList dynamic="true" type="configuration/instances" configurationTypeId="UIBINDMING-DEMOS-JSON" /> 				
				</selectItems>
			</column> 
			<column value="@type" label="Type" width="60" type="TextBox" defaultValue="t1"/>
			<column value="Name" label="Navigate To" width="100" type="HyperLink" navigateTo="ADMINISTRATION:ALL/local/OSGI-SPM/OSGI-SPM/diagnostics" params="pluginInfoGrid.filter=${selectedCell.value}"/>						
		</property>	
		
		<!-- Table control 
	              - bound to #{ReadOnlyProperties.Property} Key/Value pair Collection ServerSide binding  
	                  - visible="OnEdit"          
	              - the columns in the table:
	                   - @name - Attribute(key) binding, Type Text -> ReadOnly
	                   - $ - Value binding  
	    -->				
		<property name="ReadOnlyTableControl" value="#{ReadOnlyProperties.Property}" label="Table - readonly, visible OnEdit" type="Table" visible="OnEdit">
			<column value="@name" label="Attribute(key)" type="Text"/>			
			<column value="$" label="Value" type="TextBox"/>
			
		</property>
			
	    <!-- Table control 
	              - bound to #{ServiceProperties.Property} Key/Value pair Collection ServerSide binding
	              - the actions in the table
	                   - addItem - enables Add to the table functionality              
	                   - deleteItem - enables Delete from the table functionality              
	              - the columns in the table:
	                   - serviceDropDown - DropDown control binding
	                        - typeAhead="true"
					   - @source - CheckBox binding demonstrating cellSupportedCondition
	                   - @reliable - Typical CheckBox binding 
	    -->				
		<property name="ServicePropertiesTable" value="#{ServiceProperties.Property}" label="CellSupported Table" type="Table">
			<createAction name="addItem" label="Add Item" />
			<deleteAction name="deleteItem" label="Delete Item" />
					
			<column name="localService" value="@localServiceName" width="180" label="Service Endpoint" type="DropDown" typeAhead="true" defaultValue="local">
				<selectItems>
		  			<selectItem name='bindRemote'  value='remoteHost' label='Remote Host Address'/>
          			<selectItem name='bindLoopback' value='127.0.0.1' label='LoopBack Address'/>
          			  
          			<selectList dynamic="true" type="landscape/nodes" selectListItems="#{node}" selectListItemValue="#{@alias}" selectListItemLabel="#{name}"/>      			          			          							
      			</selectItems>
			</column>
			
			<column value="@localServiceAvailable" label="Available Local" type="CheckBox" width="120" defaultValue="false" cellSupportedCondition="localService.#{@alias}  == 'local'"/>
			 
			<column value="@serviceActivated" label="Active" type="CheckBox" width="80" defaultValue="true"/>
		</property>	
		
		<property name="testBox" value="#{TestName}" label="Test control"  type="TextBox" defaultValue="testBox"/>
		
	</groupDef>
	
	<configurationInstancesView >
		<createAction label="Create" >
			<actionParameter name="Default" configurationDataViewName="DefaultView" label="SDKs item" />
		</createAction>		
		<deleteAction label="Delete" />
	
		<column value="#{ConfigurationInstances.ConfigurationInstance.displayName}" label="Name" sort="enabled" configurationDataView="enabled" />
		<column value="#{ConfigurationInstances.ConfigurationInstance.description}" label="Description" sort="enabled" />
	</configurationInstancesView>		
	
	<configurationDataView name="DefaultView" instructionText="Specify JVM standard and extended options (-X, -XX) only. Use system properties for -D properties."  label="SDKs Advanced Configuration" columnValue="#{Name}" value="*">
		<editAction label="Edit Action" />		
	    
		<group name="GeneralInfo" groupRef="ControlsDemo" label="GCUI Controls - Dynamic demo" />
	</configurationDataView>	
</uiBinding>